//
//  NESCPU+Operations.swift
//  WojoNES
//
//  Created by Wojciech Kosikowski on 27/06/2025.
//

extension NESCPU {
    static func setupOperations() -> [Operation] {
        // 0x00 - 0x0F
        var operations = Array(repeating: Operation(0x00, "WOJ", .implied, .brk, 7), count: 256)

        operations[0x00] = Operation(0x00, "BRK", .implied, .brk, 7)
        operations[0x01] = Operation(0x01, "ORA", .indirectX, .ora, 6)
        operations[0x02] = Operation(0x02, "STP", .implied, .stp, 2)
        operations[0x03] = Operation(0x03, "SLO", .indirectX, .slo, 8)
        operations[0x04] = Operation(0x04, "DOP", .zeroPage, .dop, 3)
        operations[0x05] = Operation(0x05, "ORA", .zeroPage, .ora, 3)
        operations[0x06] = Operation(0x06, "ASL", .zeroPage, .asl, 5)
        operations[0x07] = Operation(0x07, "SLO", .zeroPage, .slo, 5)
        operations[0x08] = Operation(0x08, "PHP", .implied, .php, 3)
        operations[0x09] = Operation(0x09, "ORA", .immediate, .ora, 2)
        operations[0x0A] = Operation(0x0A, "ASL", .implied, .asl, 2)
        operations[0x0B] = Operation(0x0B, "ANC", .immediate, .anc, 2)
        operations[0x0C] = Operation(0x0C, "TOP", .absolute, .top, 4)
        operations[0x0D] = Operation(0x0D, "ORA", .absolute, .ora, 4)
        operations[0x0E] = Operation(0x0E, "ASL", .absolute, .asl, 6)
        operations[0x0F] = Operation(0x0F, "SLO", .absolute, .slo, 6)

        // 0x10 - 0x1F
        operations[0x10] = Operation(0x10, "BPL", .relative, .bpl, 2)
        operations[0x11] = Operation(0x11, "ORA", .indirectY, .ora, 5)
        operations[0x12] = Operation(0x12, "STP", .implied, .stp, 2)
        operations[0x13] = Operation(0x13, "SLO", .indirectY, .slo, 8)
        operations[0x14] = Operation(0x14, "DOP", .zeroPageX, .dop, 4)
        operations[0x15] = Operation(0x15, "ORA", .zeroPageX, .ora, 4)
        operations[0x16] = Operation(0x16, "ASL", .zeroPageX, .asl, 6)
        operations[0x17] = Operation(0x17, "SLO", .zeroPageX, .slo, 6)
        operations[0x18] = Operation(0x18, "CLC", .implied, .clc, 2)
        operations[0x19] = Operation(0x19, "ORA", .absoluteY, .ora, 4)
        operations[0x1A] = Operation(0x1A, "NOP", .implied, .nop, 2)
        operations[0x1B] = Operation(0x1B, "SLO", .absoluteY, .slo, 7)
        operations[0x1C] = Operation(0x1C, "TOP", .absoluteX, .top, 4)
        operations[0x1D] = Operation(0x1D, "ORA", .absoluteX, .ora, 4)
        operations[0x1E] = Operation(0x1E, "ASL", .absoluteX, .asl, 7)
        operations[0x1F] = Operation(0x1F, "SLO", .absoluteX, .slo, 7)

        // 0x20 - 0x2F
        operations[0x20] = Operation(0x20, "JSR", .absolute, .jsr, 6)
        operations[0x21] = Operation(0x21, "AND", .indirectX, .and, 6)
        operations[0x22] = Operation(0x22, "STP", .implied, .stp, 2)
        operations[0x23] = Operation(0x23, "RLA", .indirectX, .rla, 8)
        operations[0x24] = Operation(0x24, "BIT", .zeroPage, .bit, 3)
        operations[0x25] = Operation(0x25, "AND", .zeroPage, .and, 3)
        operations[0x26] = Operation(0x26, "ROL", .zeroPage, .rol, 5)
        operations[0x27] = Operation(0x27, "RLA", .zeroPage, .rla, 5)
        operations[0x28] = Operation(0x28, "PLP", .implied, .plp, 4)
        operations[0x29] = Operation(0x29, "AND", .immediate, .and, 2)
        operations[0x2A] = Operation(0x2A, "ROL", .implied, .rol, 2)
        operations[0x2B] = Operation(0x2B, "ANC", .immediate, .anc, 2)
        operations[0x2C] = Operation(0x2C, "BIT", .absolute, .bit, 4)
        operations[0x2D] = Operation(0x2D, "AND", .absolute, .and, 4)
        operations[0x2E] = Operation(0x2E, "ROL", .absolute, .rol, 6)
        operations[0x2F] = Operation(0x2F, "RLA", .absolute, .rla, 6)

        // 0x30 - 0x3F
        operations[0x30] = Operation(0x30, "BMI", .relative, .bmi, 2)
        operations[0x31] = Operation(0x31, "AND", .indirectY, .and, 5)
        operations[0x32] = Operation(0x32, "STP", .implied, .stp, 2)
        operations[0x33] = Operation(0x33, "RLA", .indirectY, .rla, 8)
        operations[0x34] = Operation(0x34, "DOP", .zeroPageX, .dop, 4)
        operations[0x35] = Operation(0x35, "AND", .zeroPageX, .and, 4)
        operations[0x36] = Operation(0x36, "ROL", .zeroPageX, .rol, 6)
        operations[0x37] = Operation(0x37, "RLA", .zeroPageX, .rla, 6)
        operations[0x38] = Operation(0x38, "SEC", .implied, .sec, 2)
        operations[0x39] = Operation(0x39, "AND", .absoluteY, .and, 4)
        operations[0x3A] = Operation(0x3A, "NOP", .implied, .nop, 2)
        operations[0x3B] = Operation(0x3B, "RLA", .absoluteY, .rla, 7)
        operations[0x3C] = Operation(0x3C, "TOP", .absoluteX, .top, 4)
        operations[0x3D] = Operation(0x3D, "AND", .absoluteX, .and, 4)
        operations[0x3E] = Operation(0x3E, "ROL", .absoluteX, .rol, 7)
        operations[0x3F] = Operation(0x3F, "RLA", .absoluteX, .rla, 7)

        // 0x40 - 0x4F
        operations[0x40] = Operation(0x40, "RTI", .implied, .rti, 6)
        operations[0x41] = Operation(0x41, "EOR", .indirectX, .eor, 6)
        operations[0x42] = Operation(0x42, "STP", .implied, .stp, 2)
        operations[0x43] = Operation(0x43, "SRE", .indirectX, .sre, 8)
        operations[0x44] = Operation(0x44, "DOP", .zeroPage, .dop, 3)
        operations[0x45] = Operation(0x45, "EOR", .zeroPage, .eor, 3)
        operations[0x46] = Operation(0x46, "LSR", .zeroPage, .lsr, 5)
        operations[0x47] = Operation(0x47, "SRE", .zeroPage, .sre, 5)
        operations[0x48] = Operation(0x48, "PHA", .implied, .pha, 3)
        operations[0x49] = Operation(0x49, "EOR", .immediate, .eor, 2)
        operations[0x4A] = Operation(0x4A, "LSR", .implied, .lsr, 2)
        operations[0x4B] = Operation(0x4B, "ALR", .immediate, .alr, 2)
        operations[0x4C] = Operation(0x4C, "JMP", .absolute, .jmp, 3)
        operations[0x4D] = Operation(0x4D, "EOR", .absolute, .eor, 4)
        operations[0x4E] = Operation(0x4E, "LSR", .absolute, .lsr, 6)
        operations[0x4F] = Operation(0x4F, "SRE", .absolute, .sre, 6)

        // 0x50 - 0x5F
        operations[0x50] = Operation(0x50, "BVC", .relative, .bvc, 2)
        operations[0x51] = Operation(0x51, "EOR", .indirectY, .eor, 5)
        operations[0x52] = Operation(0x52, "STP", .implied, .stp, 2)
        operations[0x53] = Operation(0x53, "SRE", .indirectY, .sre, 8)
        operations[0x54] = Operation(0x54, "DOP", .zeroPageX, .dop, 4)
        operations[0x55] = Operation(0x55, "EOR", .zeroPageX, .eor, 4)
        operations[0x56] = Operation(0x56, "LSR", .zeroPageX, .lsr, 6)
        operations[0x57] = Operation(0x57, "SRE", .zeroPageX, .sre, 6)
        operations[0x58] = Operation(0x58, "CLI", .implied, .cli, 2)
        operations[0x59] = Operation(0x59, "EOR", .absoluteY, .eor, 4)
        operations[0x5A] = Operation(0x5A, "NOP", .implied, .nop, 2)
        operations[0x5B] = Operation(0x5B, "SRE", .absoluteY, .sre, 7)
        operations[0x5C] = Operation(0x5C, "TOP", .absoluteX, .top, 4)
        operations[0x5D] = Operation(0x5D, "EOR", .absoluteX, .eor, 4)
        operations[0x5E] = Operation(0x5E, "LSR", .absoluteX, .lsr, 7)
        operations[0x5F] = Operation(0x5F, "SRE", .absoluteX, .sre, 7)

        // 0x60 - 0x6F
        operations[0x60] = Operation(0x60, "RTS", .implied, .rts, 6)
        operations[0x61] = Operation(0x61, "ADC", .indirectX, .adc, 6)
        operations[0x62] = Operation(0x62, "STP", .implied, .stp, 2)
        operations[0x63] = Operation(0x63, "RRA", .indirectX, .rra, 8)
        operations[0x64] = Operation(0x64, "DOP", .zeroPage, .dop, 3)
        operations[0x65] = Operation(0x65, "ADC", .zeroPage, .adc, 3)
        operations[0x66] = Operation(0x66, "ROR", .zeroPage, .ror, 5)
        operations[0x67] = Operation(0x67, "RRA", .zeroPage, .rra, 5)
        operations[0x68] = Operation(0x68, "PLA", .implied, .pla, 4)
        operations[0x69] = Operation(0x69, "ADC", .immediate, .adc, 2)
        operations[0x6A] = Operation(0x6A, "ROR", .implied, .ror, 2)
        operations[0x6B] = Operation(0x6B, "ARR", .immediate, .arr, 2)
        operations[0x6C] = Operation(0x6C, "JMP", .indirect, .jmp, 5)
        operations[0x6D] = Operation(0x6D, "ADC", .absolute, .adc, 4)
        operations[0x6E] = Operation(0x6E, "ROR", .absolute, .ror, 6)
        operations[0x6F] = Operation(0x6F, "RRA", .absolute, .rra, 6)

        // 0x70 - 0x7F
        operations[0x70] = Operation(0x70, "BVS", .relative, .bvs, 2)
        operations[0x71] = Operation(0x71, "ADC", .indirectY, .adc, 5)
        operations[0x72] = Operation(0x72, "STP", .implied, .stp, 2)
        operations[0x73] = Operation(0x73, "RRA", .indirectY, .rra, 8)
        operations[0x74] = Operation(0x74, "DOP", .zeroPageX, .dop, 4)
        operations[0x75] = Operation(0x75, "ADC", .zeroPageX, .adc, 4)
        operations[0x76] = Operation(0x76, "ROR", .zeroPageX, .ror, 6)
        operations[0x77] = Operation(0x77, "RRA", .zeroPageX, .rra, 6)
        operations[0x78] = Operation(0x78, "SEI", .implied, .sei, 2)
        operations[0x79] = Operation(0x79, "ADC", .absoluteY, .adc, 4)
        operations[0x7A] = Operation(0x7A, "NOP", .implied, .nop, 2)
        operations[0x7B] = Operation(0x7B, "RRA", .absoluteY, .rra, 7)
        operations[0x7C] = Operation(0x7C, "TOP", .absoluteX, .top, 4)
        operations[0x7D] = Operation(0x7D, "ADC", .absoluteX, .adc, 4)
        operations[0x7E] = Operation(0x7E, "ROR", .absoluteX, .ror, 7)
        operations[0x7F] = Operation(0x7F, "RRA", .absoluteX, .rra, 7)

        // 0x80 - 0x8F
        operations[0x80] = Operation(0x80, "DOP", .immediate, .dop, 2)
        operations[0x81] = Operation(0x81, "STA", .indirectX, .sta, 6)
        operations[0x82] = Operation(0x82, "DOP", .immediate, .dop, 2)
        operations[0x83] = Operation(0x83, "SAX", .indirectX, .sax, 6)
        operations[0x84] = Operation(0x84, "STY", .zeroPage, .sty, 3)
        operations[0x85] = Operation(0x85, "STA", .zeroPage, .sta, 3)
        operations[0x86] = Operation(0x86, "STX", .zeroPage, .stx, 3)
        operations[0x87] = Operation(0x87, "SAX", .zeroPage, .sax, 3)
        operations[0x88] = Operation(0x88, "DEY", .implied, .dey, 2)
        operations[0x89] = Operation(0x89, "DOP", .immediate, .dop, 2)
        operations[0x8A] = Operation(0x8A, "TXA", .implied, .txa, 2)
        operations[0x8B] = Operation(0x8B, "XAA", .immediate, .xaa, 2)
        operations[0x8C] = Operation(0x8C, "STY", .absolute, .sty, 4)
        operations[0x8D] = Operation(0x8D, "STA", .absolute, .sta, 4)
        operations[0x8E] = Operation(0x8E, "STX", .absolute, .stx, 4)
        operations[0x8F] = Operation(0x8F, "SAX", .absolute, .sax, 4)

        // 0x90 - 0x9F
        operations[0x90] = Operation(0x90, "BCC", .relative, .bcc, 2)
        operations[0x91] = Operation(0x91, "STA", .indirectY, .sta, 6)
        operations[0x92] = Operation(0x92, "STP", .implied, .stp, 2)
        operations[0x93] = Operation(0x93, "AHX", .indirectY, .ahx, 6)
        operations[0x94] = Operation(0x94, "STY", .zeroPageX, .sty, 4)
        operations[0x95] = Operation(0x95, "STA", .zeroPageX, .sta, 4)
        operations[0x96] = Operation(0x96, "STX", .zeroPageY, .stx, 4)
        operations[0x97] = Operation(0x97, "SAX", .zeroPageY, .sax, 4)
        operations[0x98] = Operation(0x98, "TYA", .implied, .tya, 2)
        operations[0x99] = Operation(0x99, "STA", .absoluteY, .sta, 5)
        operations[0x9A] = Operation(0x9A, "TXS", .implied, .txs, 2)
        operations[0x9B] = Operation(0x9B, "TAS", .absoluteY, .tas, 5)
        operations[0x9C] = Operation(0x9C, "SHY", .absoluteX, .shy, 5)
        operations[0x9D] = Operation(0x9D, "STA", .absoluteX, .sta, 5)
        operations[0x9E] = Operation(0x9E, "SHX", .absoluteY, .shx, 5)
        operations[0x9F] = Operation(0x9F, "AHX", .absoluteY, .ahx, 5)

        // 0xA0 - 0xAF
        operations[0xA0] = Operation(0xA0, "LDY", .immediate, .ldy, 2)
        operations[0xA1] = Operation(0xA1, "LDA", .indirectX, .lda, 6)
        operations[0xA2] = Operation(0xA2, "LDX", .immediate, .ldx, 2)
        operations[0xA3] = Operation(0xA3, "LAX", .indirectX, .lax, 6)
        operations[0xA4] = Operation(0xA4, "LDY", .zeroPage, .ldy, 3)
        operations[0xA5] = Operation(0xA5, "LDA", .zeroPage, .lda, 3)
        operations[0xA6] = Operation(0xA6, "LDX", .zeroPage, .ldx, 3)
        operations[0xA7] = Operation(0xA7, "LAX", .zeroPage, .lax, 3)
        operations[0xA8] = Operation(0xA8, "TAY", .implied, .tay, 2)
        operations[0xA9] = Operation(0xA9, "LDA", .immediate, .lda, 2)
        operations[0xAA] = Operation(0xAA, "TAX", .implied, .tax, 2)
        operations[0xAB] = Operation(0xAB, "LAX", .immediate, .lax, 2)
        operations[0xAC] = Operation(0xAC, "LDY", .absolute, .ldy, 4)
        operations[0xAD] = Operation(0xAD, "LDA", .absolute, .lda, 4)
        operations[0xAE] = Operation(0xAE, "LDX", .absolute, .ldx, 4)
        operations[0xAF] = Operation(0xAF, "LAX", .absolute, .lax, 4)

        // 0xB0 - 0xBF
        operations[0xB0] = Operation(0xB0, "BCS", .relative, .bcs, 2)
        operations[0xB1] = Operation(0xB1, "LDA", .indirectY, .lda, 5)
        operations[0xB2] = Operation(0xB2, "STP", .implied, .stp, 2)
        operations[0xB3] = Operation(0xB3, "LAX", .indirectY, .lax, 5)
        operations[0xB4] = Operation(0xB4, "LDY", .zeroPageX, .ldy, 4)
        operations[0xB5] = Operation(0xB5, "LDA", .zeroPageX, .lda, 4)
        operations[0xB6] = Operation(0xB6, "LDX", .zeroPageY, .ldx, 4)
        operations[0xB7] = Operation(0xB7, "LAX", .zeroPageY, .lax, 4)
        operations[0xB8] = Operation(0xB8, "CLV", .implied, .clv, 2)
        operations[0xB9] = Operation(0xB9, "LDA", .absoluteY, .lda, 4)
        operations[0xBA] = Operation(0xBA, "TSX", .implied, .tsx, 2)
        operations[0xBB] = Operation(0xBB, "LAS", .absoluteY, .las, 4)
        operations[0xBC] = Operation(0xBC, "LDY", .absoluteX, .ldy, 4)
        operations[0xBD] = Operation(0xBD, "LDA", .absoluteX, .lda, 4)
        operations[0xBE] = Operation(0xBE, "LDX", .absoluteY, .ldx, 4)
        operations[0xBF] = Operation(0xBF, "LAX", .absoluteY, .lax, 4)

        // 0xC0 - 0xCF
        operations[0xC0] = Operation(0xC0, "CPY", .immediate, .cpy, 2)
        operations[0xC1] = Operation(0xC1, "CMP", .indirectX, .cmp, 6)
        operations[0xC2] = Operation(0xC2, "DOP", .immediate, .dop, 2)
        operations[0xC3] = Operation(0xC3, "DCP", .indirectX, .dcp, 8)
        operations[0xC4] = Operation(0xC4, "CPY", .zeroPage, .cpy, 3)
        operations[0xC5] = Operation(0xC5, "CMP", .zeroPage, .cmp, 3)
        operations[0xC6] = Operation(0xC6, "DEC", .zeroPage, .dec, 5)
        operations[0xC7] = Operation(0xC7, "DCP", .zeroPage, .dcp, 5)
        operations[0xC8] = Operation(0xC8, "INY", .implied, .iny, 2)
        operations[0xC9] = Operation(0xC9, "CMP", .immediate, .cmp, 2)
        operations[0xCA] = Operation(0xCA, "DEX", .implied, .dex, 2)
        operations[0xCB] = Operation(0xCB, "AXS", .immediate, .axs, 2)
        operations[0xCC] = Operation(0xCC, "CPY", .absolute, .cpy, 4)
        operations[0xCD] = Operation(0xCD, "CMP", .absolute, .cmp, 4)
        operations[0xCE] = Operation(0xCE, "DEC", .absolute, .dec, 6)
        operations[0xCF] = Operation(0xCF, "DCP", .absolute, .dcp, 6)

        // 0xD0 - 0xDF
        operations[0xD0] = Operation(0xD0, "BNE", .relative, .bne, 2)
        operations[0xD1] = Operation(0xD1, "CMP", .indirectY, .cmp, 5)
        operations[0xD2] = Operation(0xD2, "STP", .implied, .stp, 2)
        operations[0xD3] = Operation(0xD3, "DCP", .indirectY, .dcp, 8)
        operations[0xD4] = Operation(0xD4, "DOP", .zeroPageX, .dop, 4)
        operations[0xD5] = Operation(0xD5, "CMP", .zeroPageX, .cmp, 4)
        operations[0xD6] = Operation(0xD6, "DEC", .zeroPageX, .dec, 6)
        operations[0xD7] = Operation(0xD7, "DCP", .zeroPageX, .dcp, 6)
        operations[0xD8] = Operation(0xD8, "CLD", .implied, .cld, 2)
        operations[0xD9] = Operation(0xD9, "CMP", .absoluteY, .cmp, 4)
        operations[0xDA] = Operation(0xDA, "NOP", .implied, .nop, 2)
        operations[0xDB] = Operation(0xDB, "DCP", .absoluteY, .dcp, 7)
        operations[0xDC] = Operation(0xDC, "TOP", .absoluteX, .top, 4)
        operations[0xDD] = Operation(0xDD, "CMP", .absoluteX, .cmp, 4)
        operations[0xDE] = Operation(0xDE, "DEC", .absoluteX, .dec, 7)
        operations[0xDF] = Operation(0xDF, "DCP", .absoluteX, .dcp, 7)

        // 0xE0 - 0xEF
        operations[0xE0] = Operation(0xE0, "CPX", .immediate, .cpx, 2)
        operations[0xE1] = Operation(0xE1, "SBC", .indirectX, .sbc, 6)
        operations[0xE2] = Operation(0xE2, "DOP", .immediate, .dop, 2)
        operations[0xE3] = Operation(0xE3, "ISC", .indirectX, .isc, 8)
        operations[0xE4] = Operation(0xE4, "CPX", .zeroPage, .cpx, 3)
        operations[0xE5] = Operation(0xE5, "SBC", .zeroPage, .sbc, 3)
        operations[0xE6] = Operation(0xE6, "INC", .zeroPage, .inc, 5)
        operations[0xE7] = Operation(0xE7, "ISC", .zeroPage, .isc, 5)
        operations[0xE8] = Operation(0xE8, "INX", .implied, .inx, 2)
        operations[0xE9] = Operation(0xE9, "SBC", .immediate, .sbc, 2)
        operations[0xEA] = Operation(0xEA, "NOP", .implied, .nop, 2)
        operations[0xEB] = Operation(0xEB, "SBC", .immediate, .sbc, 2)
        operations[0xEC] = Operation(0xEC, "CPX", .absolute, .cpx, 4)
        operations[0xED] = Operation(0xED, "SBC", .absolute, .sbc, 4)
        operations[0xEE] = Operation(0xEE, "INC", .absolute, .inc, 6)
        operations[0xEF] = Operation(0xEF, "ISC", .absolute, .isc, 6)

        // 0xF0 - 0xFF
        operations[0xF0] = Operation(0xF0, "BEQ", .relative, .beq, 2)
        operations[0xF1] = Operation(0xF1, "SBC", .indirectY, .sbc, 5)
        operations[0xF2] = Operation(0xF2, "STP", .implied, .stp, 2)
        operations[0xF3] = Operation(0xF3, "ISC", .indirectY, .isc, 8)
        operations[0xF4] = Operation(0xF4, "DOP", .zeroPageX, .dop, 4)
        operations[0xF5] = Operation(0xF5, "SBC", .zeroPageX, .sbc, 4)
        operations[0xF6] = Operation(0xF6, "INC", .zeroPageX, .inc, 6)
        operations[0xF7] = Operation(0xF7, "ISC", .zeroPageX, .isc, 6)
        operations[0xF8] = Operation(0xF8, "SED", .implied, .sed, 2)
        operations[0xF9] = Operation(0xF9, "SBC", .absoluteY, .sbc, 4)
        operations[0xFA] = Operation(0xFA, "NOP", .implied, .nop, 2)
        operations[0xFB] = Operation(0xFB, "ISC", .absoluteY, .isc, 7)
        operations[0xFC] = Operation(0xFC, "TOP", .absoluteX, .top, 4)
        operations[0xFD] = Operation(0xFD, "SBC", .absoluteX, .sbc, 4)
        operations[0xFE] = Operation(0xFE, "INC", .absoluteX, .inc, 7)
        operations[0xFF] = Operation(0xFF, "ISC", .absoluteX, .isc, 7)

        for instr in operations {
            assert(instr.name != "WOJ", "Missing operation")
        }
        return operations
    }
}
